{
  "name": "@nft-folder/blockchain-connector",
  "version": "1.0.2",
  "description": "Blockchain Connector of the NFT Folder project",
  "main": "dist/index.js",
  "author": {
    "name": "Fraunhofer Institute for Material Flow and Logistics",
    "url": "https://www.iml.fraunhofer.de/en.html",
    "email": "maximilian.austerjost@iml.fraunhofer.de"
  },
  "license": "OLFL-1.3",
  "homepage": "https://gitlab.cc-asp.fraunhofer.de/silicon-economy/base/blockchainbroker/ethereum/projects/nft-folder/blockchain-connector/-/blob/main/README.md",
  "bugs": {
    "url": "https://gitlab.cc-asp.fraunhofer.de/silicon-economy/base/blockchainbroker/ethereum/projects/nft-folder/blockchain-connector/-/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.cc-asp.fraunhofer.de/silicon-economy/base/blockchainbroker/ethereum/projects/nft-folder/blockchain-connector"
  },
  "scripts": {
    "prepare": "husky install",
    "build": "nest build",
    "clean": "rm -rf coverage/ dist/ node_modules/",
    "clean-install": "npm run clean; npm install",
    "create-library": "npm run clean-install && npm run build && npm pack",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "token-import": "sed -i '/^TOKEN_ABI=/d' .env && echo \"TOKEN_ABI='$(xclip -selection clipboard -o)'\" >> .env",
    "eslint:check": "npx eslint \"{src,helm,test}/**/*.ts\"",
    "eslint:fix": "npx eslint --fix \"{src,helm,test}/**/*.ts\"",
    "prettier:check": "npx prettier --check 'src/**/*' 'test/**/*' ./*.*",
    "prettier:fix": "npx prettier --write 'src/**/*' 'test/**/*' ./*.*",
    "license-checker": "npm run license-checker:all && npm run license-checker:complementary && npm run license-checker:summary",
    "license-checker:all": "npx license-checker --unknown --csv --out=./third-party-licenses/third-party-licenses.csv",
    "license-checker:complementary": "npx license-checker --onlyunknown --csv --out=./third-party-licenses/third-party-licenses-complementary.csv",
    "license-checker:summary": "npx license-checker --unknown --summary --out=./third-party-licenses/third-party-licenses-summary.txt"
  },
  "lint-staged": {
    "package.json": [
      "npm run license-checker"
    ]
  },
  "dependencies": {
    "@nestjs/common": "^10.3.3",
    "@nestjs/config": "^3.2.0",
    "@nestjs/core": "^10.3.3",
    "@nestjs/microservices": "^10.3.3",
    "@nestjs/platform-express": "^10.3.3",
    "@nestjs/swagger": "^7.3.0",
    "@truffle/hdwallet-provider": "^2.1.15",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "ethers": "^6.13.1",
    "license-checker-rseidelsohn": "^4.3.0",
    "reflect-metadata": "^0.2.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.3.2",
    "@nestjs/schematics": "^10.1.1",
    "@nestjs/testing": "^10.3.3",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.12",
    "@types/multer": "^1.4.12",
    "@types/node": "^20.11.17",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^7.0.1",
    "@typescript-eslint/parser": "^7.0.1",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-license-header": "^0.6.0",
    "eslint-plugin-prettier": "^5.1.3",
    "husky": "^9.0.11",
    "jest": "^29.7.0",
    "prettier": "^3.2.5",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "^29.1.2",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.3.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      ".*\\.module\\.ts$",
      ".*\\.abi\\.ts$",
      "/main\\.ts$",
      "/entity/config.object\\.ts$",
      "/api.config.service\\.ts$",
      "/web3.service\\.ts$",
      "/blockchain.service\\.ts$",
      "/event.service\\.ts$"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
