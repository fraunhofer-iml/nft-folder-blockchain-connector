# Copyright Open Logistics Foundation
#
# Licensed under the Open Logistics Foundation License 1.3.
# For details on the licensing terms, see the LICENSE file.
# SPDX-License-Identifier: OLFL-1.3

stages:
  - build
  - test
  - analyze
  - publish

variables:
  GITLAB_TAG: 'be'
  GIT_DEPTH: 0
  NPM_CI: npm ci --include dev --cache .npm --prefer-offline

default:
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm
  image: node:20-alpine3.19
  timeout: 20 minutes

#############
### build ###
#############

install-dependencies:
  stage: build
  script:
    - $NPM_CI
  rules:
    - when: always

############
### test ###
############

# TODO-MP: Uncomment this job when adding or enabling new tests.
.run-unit-tests:
  stage: test
  before_script:
    - $NPM_CI
  script:
    - npm run test:cov
  artifacts:
    paths:
      - coverage/
    expire_in: 1 hour
  rules:
    - when: on_success

###############
### analyze ###
###############

run-eslint:
  stage: analyze
  before_script:
    - $NPM_CI
  script:
    - npm run eslint-check
  rules:
    - when: on_success

run-prettier:
  stage: analyze
  before_script:
    - $NPM_CI
  script:
    - npm run prettier-check
  rules:
    - when: on_success

run-sonar-scanner:
  stage: analyze
  image: sonarsource/sonar-scanner-cli
  script:
    - >
      sonar-scanner
      -Dproject.settings=sonar.properties
      -Dsonar.host.url="${SONAR_HOST_URL}"
      -Dsonar.login="${SONAR_TOKEN}"
  rules:
    - when: on_success
  allow_failure: true

###############
### publish ###
###############

publish-npm:
  stage: publish
  before_script:
    - npm install
    - npm run build
  script:
    - echo "@nft-folder:registry=https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
    - npm publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
